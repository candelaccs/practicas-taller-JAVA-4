clase empleado

public abstract class Empleados {
    
    private String nombre;
    private double sueldo;
    private int    antiguedad;
    
    
    public Empleados (String nom, double sue, int antic){
        
        setNombre (nom);
        setSueldo (sue);
        setAntiguedad (antic);
    } 

    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public double getSueldo() {
        return sueldo;
    }

    public void setSueldo(double sueldo) {
        this.sueldo = sueldo;
    }

    public int getAntiguedad() {
        return antiguedad;
    }

    public void setAntiguedad(int antiguedad) {
        this.antiguedad = antiguedad;
    }
    
    /*public double calcularEfectividad (int cantidad, int total ){ // si hace lo mismo en los dos casos no hay una manera de hacerlo aca y que ya calcule? //
        
        return (total/cantidad);
        
    }*/
    
    /*public abstract double salario (); // preguntar si esta bien esto //
    public double calcularSueldoACobrar (){ // idem //
        
        return (getSueldo() + ((getSueldo()*10/100)* getAntiguedad()));
    }*/
    
    public abstract double calcularEfectividad();
    public abstract double calcularSueldoACobrar ();

    @Override
    public String toString() {
        return  "nombre del empleado: " + nombre; 
    }
    
    
}

clase jugador

public class Jugador extends Empleados {
    
    private int goles;
    private int partidos;
    
    public Jugador (String nombre, double sueldo, int antiguedad, int goles, int partidos){
        
        super (nombre, sueldo, antiguedad);
        setGoles (goles);
    }

    public int getGoles() {
        return goles;
    }

    public void setGoles(int goles) {
        this.goles = goles;
    }

    public int getPartidos() {
        return partidos;
    }

    public void setPartidos(int partidos) {
        this.partidos = partidos;
    }
    
    
    /*public double calcularEfectividad (){
        
        return (double)getGoles()/getPartidos(); // solo con el double me funciona //
    }*/
    
    public double calcularEfectividad () {
        
        double aux = (getGoles ()/ getPartidos());
        return aux;
    }
    
    public double calcularSueldoACobrar (){
        
        double aux;
        
        if ( calcularEfectividad () > 0.5) 
            aux = (getSueldo() + ((getSueldo()*10/100)* getAntiguedad())+ getSueldo());
        else
            aux = (getSueldo() + ((getSueldo()*10/100)* getAntiguedad()));
        
        return aux;
          
    }

    @Override
    public String toString() {
        return "Jugador " + super.toString() + " el salario es " + this.calcularSueldoACobrar () + " su efectividad es de " + this.calcularEfectividad();
    }
    
    
    
}

clase entrenador

public class Entrenador extends Empleados {
    
    private int campeonatosGanados;
    
    public Entrenador (String nombre, double sueldo, int antiguedad, int campeonatos ){
        
        super(nombre, sueldo, antiguedad);
        setCampeonatosGanados (campeonatos);
        
    }

    public int getCampeonatosGanados() {
        return campeonatosGanados;
    }

    public void setCampeonatosGanados(int campeonatosGanados) {
        this.campeonatosGanados = campeonatosGanados;
    }
    
    public double calcularEfectividad (){ // no anda
        
        return (getCampeonatosGanados ()/ getAntiguedad ());
    }
    
    public double calcularSueldoACobrar (){
        
        // sueldo + 10% del sueldo * antiguedad //
        // suedlo + ((sueldo*10/100)* antiguedad) //
        double aux=0;
        
        if ((getCampeonatosGanados () < 4 && getCampeonatosGanados ()> 1)) 
        
              aux = 5000;
        
        if ((getCampeonatosGanados () < 10 && getCampeonatosGanados ()> 5))
            
              aux =  30000;
        
        if ( getCampeonatosGanados ()> 10)
            
              aux =  50000; 
        
        return aux + (getSueldo() + ((getSueldo()*10/100)* getAntiguedad())); // esta bien hacerlo de esta manera aunque aux quede en 0 y no sea ningun if? asi no pongo 3 veces el else //
           
    }

    @Override
    public String toString() {
        return "Entrenador " + super.toString() + " su salario es " + calcularSueldoACobrar() + " su efectividad es " + calcularEfectividad ();
    }   
    
}


main

import PaqueteLectura.Lector;

public class EjercicioFutbol {

   
    public static void main(String[] args) {
       
        String nombre;
        double sueldo;
        int antiguedad;
        int goles;
        int partidos;
        int campeonatos;
        
        System.out.println ( " ingrese un jugador " + "\n");
        System.out.println ( " ingrese nombre ");
        nombre = Lector.leerString();
        System.out.println ( " ingrese su sueldo ");
        sueldo = Lector.leerDouble();
        System.out.println ( " ingrese su antiguedad ");
        antiguedad = Lector.leerInt();
        System.out.println (" ingrese los goles anotados ");
        goles = Lector.leerInt();
        System.out.println (" ingrese la cantidad de partidos en los que asistio ");
        partidos = Lector.leerInt();
        
        Jugador j = new Jugador (nombre, sueldo, antiguedad, goles, partidos);
        System.out.println (j.toString());
        
        
        System.out.println ( " ingrese un entrenador " + "\n");
        System.out.println ( " ingrese nombre ");
        nombre = Lector.leerString();
        System.out.println ( " ingrese su sueldo ");
        sueldo = Lector.leerDouble();
        System.out.println ( " ingrese su antiguedad ");
        antiguedad = Lector.leerInt();
        System.out.println (" ingrese la cantidad de campeonatos a los que asistio ");
        campeonatos = Lector.leerInt();
        
        Entrenador n = new Entrenador (nombre, sueldo, antiguedad, campeonatos);
        System.out.println ( n.toString());
        
    }
    
}
