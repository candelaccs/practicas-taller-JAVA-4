1-
A- Incluya la clase Triángulo a la jerarquía de figuras vista (carpeta tema4). Triángulo
debe heredar de Figura todo lo que es común y definir su constructor y sus atributos y
métodos propios. Además debe redefinir el método toString.
B- De igual manera, incluya la clase Círculo a la jerarquía de figuras.
C- Añada a la representación String el valor del perímetro. Piense ¿qué método toString
debe modificar: el de cada subclase o el de Figura?
D- Añada el método despintar que establece los colores de la figura a línea “negra” y
relleno “blanco”. Piense ¿dónde debe definir el método: en cada subclase o en Figura?
E- Realizar un programa que instancie un triángulo y un círculo. Muestre en consola la
representación String de cada uno. Pruebe el funcionamiento del método despintar.



clase FIGURAS 

public abstract class Figuras {
    
    
    private String colorRelleno;
    private String colorLinea;
   
    public Figuras (String unCR, String unCL){
        setColorRelleno(unCR);
        setColorLinea(unCL);
    }
    
    public String toString(){
        String aux = "Area: " + this.calcularArea() +
                     " CR: "  + getColorRelleno() + 
                      " CL: " + getColorLinea() +
                     " Perimetro: " + this.calcularPerimetro();
             return aux;
       }

    
    public void despintar (){
        
        setColorRelleno ("Blanco");
        setColorLinea ("Negro");
    }
    
    public String getColorRelleno(){
        return colorRelleno;       
    }
    public void setColorRelleno(String unColor){
        colorRelleno = unColor;       
    }
    public String getColorLinea(){
        return colorLinea;       
    }
    public void setColorLinea(String unColor){
        colorLinea = unColor;       
    }
    
    public abstract double calcularArea();
    public abstract double calcularPerimetro();
    
   
     

    }



clase TRIANGULO

public class triangulo extends Figuras {
    
    private double ladoUno;
	private double ladoDos;
	private double ladoTres;
	
	public triangulo (double elLadoUno, double elLadoDos, double elLadoTres,  String colorDeRelleno, String colorDeLinea){
		
                super (colorDeRelleno, colorDeLinea); // por que debe ir como primera linea ? //
		setLadoUno (elLadoUno); // por que si o si tengo que poner con mayus por mas que este declarada con minus? ej, ladoUno setLadoUno //
		setLadoDos (elLadoDos);
	        setLadoTres (elLadoTres);
		
	}

	public double getLadoUno() {
		return ladoUno;
	}

	public void setLadoUno(double ladoUno) {
		this.ladoUno = ladoUno;
	}

	public double getLadoDos() {
		return ladoDos;
	}

	public void setLadoDos(double ladoDos) {
		this.ladoDos = ladoDos;
	}

	public double getLadoTres() {
		return ladoTres;
	}

	public void setLadoTres(double ladoTres) {
		this.ladoTres = ladoTres;
	}

	
	public double calcularPerimetro (){
		//double aux = ladoUno + ladoDos + ladoTres;
		// return aux;
                return (getLadoUno() + getLadoDos () + getLadoTres());
	}
	
	public double calcularArea () {
		// double s = (ladoUno + ladoDos + ladoTres) / 2.0;
		// double x = (s*(s-ladoUno)* (s-ladoDos)* (s-ladoTres));
		// return Math.sqrt(x);
                double s = (getLadoUno() + getLadoDos () + getLadoTres()) / 2.0;
                double x = (s*(s-getLadoUno()))* (s-getLadoDos())* (s-getLadoTres());
                return Math.sqrt(x);
		
	}

	@Override
	public String toString() {
	
          String aux = super.toString() + " lado 1: " + getLadoUno()+ " lado Dos: " + getLadoDos() + " lado tres: " + getLadoTres();
          return aux;
                  
        }    

    
}


clase CIRCULO


public class Circulo extends Figuras {
    
    private double radio;
   
    
    public Circulo (double elRadio, String elColorR, String elColorL){
        
        super (elColorR, elColorL);
        setRadio (elRadio);
        
    }

    public double getRadio() {
        return radio;
    }

    public void setRadio(double radio) {
        this.radio = radio;
    }

    
    public double calcularPerimetro (){
    
        // double perimetro;
        //perimetro = 2*radio*Math.PI;
        //return perimetro;
        
        return (2*getRadio()*Math.PI);
        
    }
    
    public double calcularArea (){
        // double area;
        // area = Math.PI*radio*radio;
        // return area;
        
        return (Math.PI * getRadio()* getRadio());
    }

    @Override
    public String toString() {
        
        String aux = super.toString() + " radio: " + getRadio();
        return aux;
    }
   
    
}

MAIN

import PaqueteLectura.Lector;

public class Prueba {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        
        double ladoUno;
        double ladoDos;
        double ladoTres;
        double radio;
        String relleno;
        String linea;
        
        System.out.println (" ingrese lado uno ");
        ladoUno = Lector.leerDouble();
        System.out.println (" ingrese lado dos ");
        ladoDos = Lector.leerDouble();
        System.out.println (" ingrese lado tres ");
        ladoTres = Lector.leerDouble();
        System.out.println (" ingrese el color de relleno");
        relleno = Lector.leerString();
        System.out.println ( " ingrese el color de linea ");
        linea = Lector.leerString();
        
        triangulo tri = new triangulo (ladoUno, ladoDos, ladoTres, relleno, linea);
        System.out.println (tri.toString()); // siempre poner system porq sino no va a imprimir
        tri.despintar();
        System.out.println (tri.toString());
        
        System.out.println (" ingrse el radio del circulo ");
        radio = Lector.leerDouble();
        System.out.println (" ingrese el color de relleno");
        relleno = Lector.leerString();
        System.out.println ( " ingrese el color de linea ");
        linea = Lector.leerString();
        
        
        Circulo cir = new Circulo (radio, relleno, linea);
        System.out.println (cir.toString());
        cir.despintar();
        System.out.println (cir.toString());
        
    }
    
}
